/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.UniversityAdminRole;

import Business.EcoSystem;
import Business.Role.ForumAdminRole;
import Business.Role.StudentRole;
import Business.Role.VolunteerRole;
import Business.University.ForumAdmin;
import Business.University.Student;
import Business.University.Volunteer;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.NutritionistAppointment;
import Business.WorkQueue.NutritionistAppointmentQueue;
import Business.WorkQueue.RegistrationRequest;
import Business.WorkQueue.RegistrationRequestWorkQueue;
import Business.WorkQueue.Therapy;
import Business.WorkQueue.TherapyQueue;
import Business.WorkQueue.YogaAppointment;
import Business.WorkQueue.YogaAppointmentQueue;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Varakumar
 */
public class ManageUniversityOrgDetailsJPanel extends javax.swing.JPanel {
    
    private JPanel UserProcessContainer;
    private UserAccount account;
    private EcoSystem system;

    /**
     * Creates new form UniversityAdminRoleJPanel
     */
    public ManageUniversityOrgDetailsJPanel(JPanel UserProcessContainer, UserAccount account, EcoSystem system) {
        
        this.UserProcessContainer=UserProcessContainer;
        this.account=account;
        this.system=system;
        initComponents();
        populateTable();
        
    }
    
    public void populateRequestTable(){
        
        RegistrationRequestWorkQueue req = system.getUniversitydirectory().getRegistrationrequestworkqueue();
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
        model.setRowCount(0);
        
        if(req== null){
            
            system.getUniversitydirectory().setRegistrationrequestworkqueue(new RegistrationRequestWorkQueue());
            req = system.getUniversitydirectory().getRegistrationrequestworkqueue();
            
        }
        
        for(RegistrationRequest re: req.getRegistrationRequestlist()){
            
            Object[] row = new Object[2];
            row[0]= re.getId();
            row[1]= re.getUsername();
            
            
            model.insertRow(0, row);
            
            
            
            
            
            
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCity = new javax.swing.JTextField();
        cmbOrgType = new javax.swing.JComboBox<>();
        lblPhoneNo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentDetails = new javax.swing.JTable();
        txtCountry = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtZip = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        lblOrgType = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        txtPhoneNo = new javax.swing.JTextField();
        lblCountry = new javax.swing.JLabel();
        lblOrgName = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        lblZip = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnSubmit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        btnPopulate = new javax.swing.JButton();
        btnDeleteReq = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        cmbOrgType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Forum Admin", "Volunteer" }));
        cmbOrgType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrgTypeActionPerformed(evt);
            }
        });

        lblPhoneNo.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblPhoneNo.setText("Phone no.:");

        tblStudentDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Student Type", "Contact No", "Address", "Zipcode"
            }
        ));
        jScrollPane1.setViewportView(tblStudentDetails);
        if (tblStudentDetails.getColumnModel().getColumnCount() > 0) {
            tblStudentDetails.getColumnModel().getColumn(1).setHeaderValue("Student Type");
            tblStudentDetails.getColumnModel().getColumn(2).setHeaderValue("Contact No");
            tblStudentDetails.getColumnModel().getColumn(3).setHeaderValue("Address");
            tblStudentDetails.getColumnModel().getColumn(4).setHeaderValue("Zipcode");
        }

        lblAddress.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblAddress.setText("Address:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblCity.setText("City:");

        lblOrgType.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblOrgType.setText("User type:");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lblCountry.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblCountry.setText("Country:");

        lblOrgName.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblOrgName.setText("Name:");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblZip.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblZip.setText("Zipcode:");

        lblEmail.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblEmail.setText("Email:");

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage University Student Accounts");

        lblUserName.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblUserName.setText("UserName:");

        lblPassword.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        lblPassword.setText("Password:");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("*** 8-10 characters, including numbers and special characters");

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Request ID", "Username"
            }
        ));
        tblRequests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRequestsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblRequests);

        btnPopulate.setText("Populate");
        btnPopulate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPopulateActionPerformed(evt);
            }
        });

        btnDeleteReq.setText("Delete");
        btnDeleteReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteReqActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPassword)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblOrgType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblOrgName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(cmbOrgType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblPhoneNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCountry, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblZip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                    .addComponent(txtPhoneNo)
                                    .addComponent(txtAddress)
                                    .addComponent(txtCity)
                                    .addComponent(txtCountry)
                                    .addComponent(txtZip)
                                    .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(btnPopulate)
                                        .addGap(30, 30, 30)
                                        .addComponent(btnDeleteReq)
                                        .addGap(34, 34, 34))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(42, 42, 42))))))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCreate, btnSubmit, txtAddress, txtCity, txtCountry, txtEmail, txtName, txtPassword, txtPhoneNo, txtZip});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrgType)
                    .addComponent(cmbOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPassword)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrgName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoneNo)
                            .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAddress)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDeleteReq)
                        .addComponent(btnPopulate)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCountry)
                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZip)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreate)
                .addContainerGap(198, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void cmbOrgTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrgTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOrgTypeActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        if((txtUsername.getText().isEmpty())|| (txtPassword.getText().isEmpty())
                ){

            JOptionPane.showMessageDialog(this, "Field left Blank!");
        }
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        
        String reg = "^(?=.*[0-9])"
        + "(?=.*[a-z])(?=.*[A-Z])"
        + "(?=.*[@#$%^&+=])"
        + "(?=\\S+$).{8,20}$";
        Pattern pat = Pattern.compile(reg);
        Matcher mat = pat.matcher(password);
        int f = 0;
        if(mat.matches()){
            f=1;

        }
        if(f==0){

            JOptionPane.showMessageDialog(this, "Invalid Password!");
            return;

        }
        
        if(system.getUserAccountDirectory().checkIfUsernameIsUnique(username)==false){

            JOptionPane.showMessageDialog(this, "Username already taken!");
            return;

        }
        
        if(cmbOrgType.getSelectedItem().toString()=="Student"){
            
            system.getUserAccountDirectory().createUserAccount(username, password, new StudentRole());
            Student student = system.getUniversitydirectory().getStudentdir().AddStudent();
            student.setId(txtUsername.getText());
            JOptionPane.showMessageDialog(this, "User Added!");
            return;
            
            
            
            
        }
        
        if(cmbOrgType.getSelectedItem().toString()=="Forum Admin"){
            
            system.getUserAccountDirectory().createUserAccount(username, password, new ForumAdminRole());
            ForumAdmin fa = system.getUniversitydirectory().getForumdir().AddForumAdmin();
            fa.setId(txtUsername.getText());
            JOptionPane.showMessageDialog(this, "User added!");
            return;
            
            
            
        }
        
        if(cmbOrgType.getSelectedItem().toString()=="Volunteer"){
            
            system.getUserAccountDirectory().createUserAccount(username, password, new VolunteerRole());
            Volunteer vol = system.getUniversitydirectory().getVolunteerdir().AddVolunteer();
            vol.setId(txtUsername.getText());
            JOptionPane.showMessageDialog(this, "User added!");
            return;
            
            
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        
        
        
        if(system.getUniversitydirectory().getForumdir().RetrieveForumAdmin(txtUsername.getText())!=null){
            ForumAdmin therapist = system.getUniversitydirectory().getForumdir().RetrieveForumAdmin(txtUsername.getText());
            String name = txtUsername.getText();
            String email = txtEmail.getText();
            String phno = txtPhoneNo.getText();
            String address = txtAddress.getText();
            String city = txtCity.getText();
            String country = txtCountry.getText();
            String zipcode = txtZip.getText();
            
            if(name==null || email==null || phno==null || address==null || city==null || country==null || zipcode==null){
                
                JOptionPane.showMessageDialog(this, "Fields blank!");
                return;

            }
            
            String reg= "^\\d{10}$";
            Pattern pat = Pattern.compile(reg);
            Matcher mat = pat.matcher(phno);

            if(!(mat.matches())){

                JOptionPane.showMessageDialog(this, "Invalid Phone!");
                return;

            }
            
            String regemail = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        
            Pattern em = Pattern.compile(regemail);
            Matcher ma = em.matcher(email);
            int f=0;
            if((ma.matches())){
            
            f=1;
            
            
            
            
            
         }
            if(f==0){
            
            JOptionPane.showMessageDialog(this, "Invalid Email!");
            return;
            
            
            }
            therapist.setName(name);
            therapist.setAddress(address);
            therapist.setCountry(country);
            therapist.setCity(city);
            therapist.setEmail(email);
            therapist.setPhno(phno);
            therapist.setZip(zipcode);
            JOptionPane.showMessageDialog(this, "Forum Admin added!");
            populateTable();
            return;
            
            
            
            
            
            
        }
        
        if(system.getUniversitydirectory().getStudentdir().RetrieveStudent(txtUsername.getText())!=null){
            Student therapist = system.getUniversitydirectory().getStudentdir().RetrieveStudent(txtUsername.getText());
            String name = txtUsername.getText();
            String email = txtEmail.getText();
            String phno = txtPhoneNo.getText();
            String address = txtAddress.getText();
            String city = txtCity.getText();
            String country = txtCountry.getText();
            String zipcode = txtZip.getText();
            
            if(name==null || email==null || phno==null || address==null || city==null || country==null || zipcode==null){
                
                JOptionPane.showMessageDialog(this, "Fields blank!");
                return;

            }
            
            String reg= "^\\d{10}$";
            Pattern pat = Pattern.compile(reg);
            Matcher mat = pat.matcher(phno);

            if(!(mat.matches())){

                JOptionPane.showMessageDialog(this, "Invalid Phone!");
                return;

            }
            
            String regemail = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        
            Pattern em = Pattern.compile(regemail);
            Matcher ma = em.matcher(email);
            int f=0;
            if((ma.matches())){
            
            f=1;
            
            
            
            
            
         }
            if(f==0){
            
            JOptionPane.showMessageDialog(this, "Invalid Email!");
            return;
            
            
            }
            therapist.setName(name);
            therapist.setAddress(address);
            therapist.setCountry(country);
            therapist.setCity(city);
            therapist.setEmail(email);
            therapist.setPhno(phno);
            therapist.setZip(zipcode);
            JOptionPane.showMessageDialog(this, "Student added!");
            populateTable();
            return;
            
            
            
            
            
            
        }
        
        if(system.getUniversitydirectory().getVolunteerdir().RetrieveVolunteer(txtUsername.getText())!=null){
            Volunteer therapist = system.getUniversitydirectory().getVolunteerdir().RetrieveVolunteer(txtUsername.getText());
            String name = txtUsername.getText();
            String email = txtEmail.getText();
            String phno = txtPhoneNo.getText();
            String address = txtAddress.getText();
            String city = txtCity.getText();
            String country = txtCountry.getText();
            String zipcode = txtZip.getText();
            
            if(name==null || email==null || phno==null || address==null || city==null || country==null || zipcode==null){
                
                JOptionPane.showMessageDialog(this, "Fields blank!");
                return;

            }
            
            String reg= "^\\d{10}$";
            Pattern pat = Pattern.compile(reg);
            Matcher mat = pat.matcher(phno);

            if(!(mat.matches())){

                JOptionPane.showMessageDialog(this, "Invalid Phone!");
                return;

            }
            
            String regemail = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        
            Pattern em = Pattern.compile(regemail);
            Matcher ma = em.matcher(email);
            int f=0;
            if((ma.matches())){
            
            f=1;
            
            
            
            
            
         }
            if(f==0){
            
            JOptionPane.showMessageDialog(this, "Invalid Email!");
            return;
            
            
            }
            therapist.setName(name);
            therapist.setAddress(address);
            therapist.setCountry(country);
            therapist.setCity(city);
            therapist.setEmail(email);
            therapist.setPhno(phno);
            therapist.setZip(zipcode);
            JOptionPane.showMessageDialog(this, "Volunteer added!");
            populateTable();
            return;
            
            
            
            
            
            
        }
        
        if(system.getUniversitydirectory().getVolunteerdir().RetrieveVolunteer(txtUsername.getText())==null || system.getUniversitydirectory().getStudentdir().RetrieveStudent(txtUsername.getText())==null || 
                 system.getUniversitydirectory().getForumdir().RetrieveForumAdmin(txtUsername.getText())==null){
            
            JOptionPane.showMessageDialog(this, "Create User Account First!");
            return;
            
            
            
        }
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel modelOrder = (DefaultTableModel)tblStudentDetails.getModel();
        int selectedIndex = tblStudentDetails.getSelectedRow();
        if(selectedIndex!=-1){
            
            String order = modelOrder.getValueAt(selectedIndex, 0).toString();
            String type = modelOrder.getValueAt(selectedIndex, 1).toString();
            if(type=="Student"){
                
                system.getUniversitydirectory().getStudentdir().DeleteStudent(order);
                modelOrder.removeRow(selectedIndex);
                system.getUserAccountDirectory().deleteUserAccount(order);
                
                TherapyQueue therapyqueue = system.getClinicdirectory().getTherapyqueue();
                for(Therapy therapy: therapyqueue.getTherapylist()){
                    
                    if(therapy.getStudentid().equals(order)){
                        
                        therapyqueue.getTherapylist().remove(therapy);
                        
                        
                    }
                }
                
                NutritionistAppointmentQueue nutri = system.getMindfitnessdir().getNutriqueue();
                
                for( NutritionistAppointment therapy: nutri.getNutritionistAppointmentlist()){
                    
                    if(therapy.getStudentid().equals(order)){
                        
                        nutri.getNutritionistAppointmentlist().remove(therapy);
                        
                        
                    }
                }
                
                YogaAppointmentQueue yoga = system.getMindfitnessdir().getYogaqueue();
                
                for( YogaAppointment therapy: yoga.getYogaAppointmentlist()){
                    
                    if(therapy.getStudentid().equals(order)){
                        
                        yoga.getYogaAppointmentlist().remove(therapy);
                        
                        
                    }
                }
                
                
                
                
                
                
                
                
                JOptionPane.showMessageDialog(this, "Deleted!");
                return;
                
                
                
                
                
            }
            
            if(type=="Forum Admin"){
                
                system.getUniversitydirectory().getForumdir().DeleteForumAdmin(order);
                modelOrder.removeRow(selectedIndex);
                JOptionPane.showMessageDialog(this, "Deleted!");
                return;
                
                
                
            }
            
            if(type=="Volunteer"){
                
                system.getUniversitydirectory().getVolunteerdir().DeleteVolunteer(order);
                modelOrder.removeRow(selectedIndex);
                JOptionPane.showMessageDialog(this, "Deleted!");
                return;
                
                
                
            }
            
            
            
            
            
            
            
            
        }
        
        
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblRequestsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRequestsMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel modelOrder = (DefaultTableModel)tblRequests.getModel();
        int selectedIndex = tblRequests.getSelectedRow();
        if(selectedIndex==-1){
            
            JOptionPane.showMessageDialog(this, "Please Select a row!");
            return;
            
        }
        String id=null;
        
        if(selectedIndex!=-1){
            
             id = modelOrder.getValueAt(selectedIndex, 0).toString();
             //createdby = modelOrder.getValueAt(selectedIndex, 2).toString();
        }
        
        RegistrationRequestWorkQueue re = system.getUniversitydirectory().getRegistrationrequestworkqueue();
        
        RegistrationRequest req = re.retrieveRegistrationRequest(Integer.parseInt(id));
        
        txtAddress.setText(req.getAddress());
        txtUsername.setText(req.getUsername());
        txtPassword.setText(req.getPassword());
        txtEmail.setText(req.getEmail());
        txtPhoneNo.setText(req.getPhno());
        txtName.setText(req.getName());
        txtCity.setText(req.getCity());
        txtCountry.setText(req.getCountry());
        txtZip.setText(req.getZipcode());
        
        
        
    }//GEN-LAST:event_tblRequestsMouseClicked

    private void btnPopulateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPopulateActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_btnPopulateActionPerformed

    private void btnDeleteReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteReqActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel modelOrder = (DefaultTableModel)tblRequests.getModel();
        int selectedIndex = tblRequests.getSelectedRow();
        if(selectedIndex==-1){
            
            JOptionPane.showMessageDialog(this, "Please Select a row!");
            return;
            
        }
        String id=null;
        
        if(selectedIndex!=-1){
            
             id = modelOrder.getValueAt(selectedIndex, 0).toString();
             //createdby = modelOrder.getValueAt(selectedIndex, 2).toString();
        }
        
        RegistrationRequestWorkQueue re = system.getUniversitydirectory().getRegistrationrequestworkqueue();
        
        re.deleteRegistrationRequest(Integer.parseInt(id));
        
         JOptionPane.showMessageDialog(this, "Deleted!");
        
        
        
    }//GEN-LAST:event_btnDeleteReqActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteReq;
    private javax.swing.JButton btnPopulate;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cmbOrgType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblOrgName;
    private javax.swing.JLabel lblOrgType;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblZip;
    private javax.swing.JTable tblRequests;
    private javax.swing.JTable tblStudentDetails;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
         //To change body of generated methods, choose Tools | Templates.
         
         DefaultTableModel model = (DefaultTableModel) tblStudentDetails.getModel();
         model.setRowCount(0);
         
         if(system.getUniversitydirectory().getStudentdir().getstudentlist()==null){
             
             ArrayList <Student> studentlist = new ArrayList();
             system.getUniversitydirectory().getStudentdir().setStudentlist(studentlist);
             
         }
         
         if(system.getUniversitydirectory().getVolunteerdir().getvolunteerlist()==null){
             
             ArrayList <Volunteer> volunteerlist = new ArrayList();
             system.getUniversitydirectory().getVolunteerdir().setVolunteerlist(volunteerlist);
             
         }
         
         if(system.getUniversitydirectory().getForumdir().getforumadminlist()==null){
             
             ArrayList <ForumAdmin> volunteerlist = new ArrayList();
             system.getUniversitydirectory().getForumdir().setForumadminlist(volunteerlist);
             
         }
         
         
        
       
       
       
       for(Student therapist: system.getUniversitydirectory().getStudentdir().getstudentlist()){
            
            Object[] row = new Object[5];
            row[0]= therapist.getId();
            row[1]= "Student";
            row[2]= therapist.getPhno();
            row[3]= therapist.getAddress();
            row[4]=therapist.getZip();
            
            model.insertRow(0, row);
                
            
            
            
        }
       
       for(Volunteer clinicstaff: system.getUniversitydirectory().getVolunteerdir().getvolunteerlist()){
            
            Object[] row = new Object[5];
            row[0]= clinicstaff.getId();
            row[1]= "Volunteer";
            row[2]= clinicstaff.getPhno();
            row[3]= clinicstaff.getAddress();
            row[4]=clinicstaff.getZip();
            
            model.insertRow(0, row);
                
            
            
            
        }
       
       for(ForumAdmin clinicstaff: system.getUniversitydirectory().getForumdir().getforumadminlist()){
            
            Object[] row = new Object[5];
            row[0]= clinicstaff.getId();
            row[1]= "Forum Admin";
            row[2]= clinicstaff.getPhno();
            row[3]= clinicstaff.getAddress();
            row[4]=clinicstaff.getZip();
            
            model.insertRow(0, row);
                
       
            
            
        }
    }
}
